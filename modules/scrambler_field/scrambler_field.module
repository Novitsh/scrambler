<?php
/**
 * @file
 * Contains field configuration scrambling methods.
 */

require_once 'includes/scrambler_field.entity.inc';
require_once 'includes/scrambler_field.view.inc';

/**
 * Implements hook_menu().
 */
function scrambler_field_menu() {
  $config = new \Drupal\scrambler_field\Controller\ConfigController();

  return $config->getMenuItems();
}

/**
 * Implements hook_permission().
 */
function scrambler_field_permission() {
  $permission = new \Drupal\scrambler_field\Security\Permission();

  return $permission->getPermission();
}

/**
 * Implements hook_scrambler_api().
 */
function scrambler_field_scrambler_api() {
  $scrambler = new \Drupal\scrambler_field\BLL\Scramble();
  $entities = entity_load('scrambler_field');
  $params = array();

  foreach ($entities as $entity) {
    // If the field is the Drupal title field.
    if ($entity->fid == -1) {
      $params['scrambler_field']['title'] = array(
        'base_table' => 'node_revision',
        'master_table' => 'node',
        'id' => 'vid',
        'fields' => array('title'),
        'method' => $entity->scrambler_method,
      );
    }
    // Else if the field is of the kind field entity.
    else {
      $data = $scrambler->getScrambleFieldData($entity->fid);
      if ($data) {
        $params['scrambler_field'][$data['field_name']] = array(
          'base_table' => $data['base_table'],
          'master_table' => $data['master_table'],
          'id' => $data['id'],
          'fields' => $data['fields'],
          'method' => $entity->scrambler_method,
        );
      }
    }
  }

  return $params;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function scrambler_field_ctools_plugin_api($owner, $api) {
  if ($owner == 'scrambler_field' && $api == 'default_scrambler_field_presets') {
    return array('version' => 1);
  }
}
